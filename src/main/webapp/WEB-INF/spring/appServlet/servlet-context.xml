<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven /> 

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <default-servlet-handler/>
	
	<!-- web.xml 의 dispatcherservlet 을 거치기 전에 모든 페이지에 대해서 캐시를 남기지않도록 설정한다. filter 역할을 대신할수있음 -->   
   <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor" 	
   		id="webContentInterceptor" 
   		p:useCacheControlHeader="true" 
   		p:cacheSeconds="0" 
   		p:useExpiresHeader="true"
   		p:useCacheControlNoStore="true"
   >
   </beans:bean>
   
   <!-- Lock 확인을 위한 Interceptor의 bean 주입 설정 -->
   <beans:bean id="lockInterceptor" class="kr.or.ctw.common.interceptor.LockInterceptor">
   </beans:bean>

   <!-- Interceptors 를 이용한 cache Data 관리 / webContentInterceptor / ref bean="해당 id를찾는다"-->
   <!-- 세션 Lock 정보를 확인해서 Lock 상태일경우 인터셉터(lockInterceptor)가 페이지를 redirect 시켜준다 -->
   <interceptors>
   		<beans:ref bean="webContentInterceptor"/>
   		<interceptor>
   			<mapping path="/manager/*"/>
   			<mapping path="/member/*"/>
   			<mapping path="/lock/*"/>
   			<exclude-mapping path="/lock/unlock"/>
   			<exclude-mapping path="/lock/lockscreen"/>
   			<beans:ref bean="lockInterceptor"/>
   		</interceptor>
   </interceptors>


	 <!-- 다운로드를 위한 view 설정  -->
	<beans:bean id="fileDownloadView" class="kr.or.ctw.common.file.FileDownloadView"/>
	<beans:bean id="fileViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <beans:property name="order" value="0"/>
	</beans:bean>
	


   <context:component-scan base-package="kr.or.ctw" />

   
   <context:component-scan base-package="kr.or.ctw" use-default-filters="false">
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
      <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
      <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
   </context:component-scan>
   
   
   <!-- POI를 사용하기 위한 Bean설정, 나중에 ExcelView를 콜해야 하므로 BeanNameViewResolver의 순서가 먼저 -->
   <beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
   <beans:property name="order" value="1"/>
   </beans:bean>
   
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   	<beans:property name="prefix" value="/WEB-INF/views/"/>
   	<beans:property name="suffix" value=".jsp"/>
   	<beans:property name="order" value="2"/>
   </beans:bean>
   
   
</beans:beans>